{"version":3,"sources":["components/startscreen.js","components/laplist.js","components/betterorWorse.js","components/counterApp.js","components/appBar.js","App.js","serviceWorker.js","index.js"],"names":["Startscreen","onsubmit","useState","Opensnackbar","setopenSnackbar","handleopensnackbar","Grid","container","direction","justify","alignItems","className","TextField","id","type","label","Button","onClick","e","name","document","getElementById","value","rundenzahl","startnummer","startzeit","Date","variant","color","Snackbar","open","autoHideDuration","onClose","event","reason","message","laplist","props","laparray","timedifference","zeitenarray","map","element","index","Rendercomponent","data","zeitunterschied","currentindex","currenttimestamp","writtentime","toLocaleTimeString","BetterorWorse","timefromlapbeforelap","timefromlapbefore","lastlaptime","altezeit","neuezeit","getTime","Faster","Slower","fontSize","CounterApp","userinformation","modalopen","setmodalopen","toLocaleString","startzeitobject","aktuellerunde","setAktuellerunde","rennenamlaufen","aktuelleZeit","setaktuelleZeit","zufahren","setzufahren","0","datum","setTimedifference","rundentimestamps","setRundentimestamps","startStamp","callculatetime","newStamp","diff","Math","round","d","floor","h","m","calculatetimedifference","oldtime","newtime","oldstamp","React","useEffect","intervall","setInterval","clearInterval","Card","CardContent","Typography","gutterBottom","component","Fab","newDate","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","doc","jsPDF","text","setoff","console","log","keys","Object","pageheight","forEach","addPage","runde","JSON","stringify","gesamtzeit","toString","save","exportPDF","startIcon","hadlestop","Appbar","setOpen","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","App","setuserinformation","Container","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5d9d3dd.chunk.js","sourcesContent":["import { Button } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { Grid } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function Startscreen({ onsubmit }) {\r\n\r\n    const [Opensnackbar, setopenSnackbar] = useState(false)\r\n\r\n    function handlesubmit(e) {\r\n        const name = document.getElementById(\"name\").value;\r\n        const rundenzahl = document.getElementById(\"rundenzahl\").value;\r\n        const startnummer = document.getElementById(\"startnummer\").value;\r\n        const startzeit = new Date();\r\n        if(name == \"\" || rundenzahl == \"\" || startnummer == \"\"){\r\n            handleopensnackbar();\r\n        }else{\r\n            onsubmit({name: name, rundenzahl: rundenzahl, startnummer: startnummer, startzeit: startzeit});\r\n        }\r\n    }\r\n\r\n    const handleopensnackbar = () => {\r\n        setopenSnackbar(true);\r\n      };\r\n    \r\n      const handleclosesnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setopenSnackbar(false);\r\n    };\r\n\r\n\r\n    return (\r\n\r\n            <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className=\"heightfull\">\r\n                    <TextField  id=\"name\" type=\"text\" label=\"Name des Sportlers\" />\r\n                    <TextField \r\n                    id=\"rundenzahl\"\r\n                    label=\"Rundenanzahl\"\r\n                    type=\"number\"\r\n                    />\r\n                    <TextField \r\n                    id=\"startnummer\"\r\n                    label=\"Startnummer\"\r\n                    type=\"number\"\r\n                    />\r\n                    <div className=\"spacer\"></div>\r\n                <Button onClick={handlesubmit} variant=\"contained\" color=\"secondary\">Jetzt starten</Button>\r\n                <Snackbar open={Opensnackbar} autoHideDuration={3000} onClose={handleclosesnackbar} message=\"Alle Felder Ausfüllen !\"/>\r\n            </Grid>\r\n    );\r\n\r\n    \r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function laplist(props) {\r\n    var laparray = props.laparray;\r\n    var timedifference = props.zeitenarray;\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {\r\n                    laparray.map(function (element, index){\r\n                        return <Rendercomponent data={element} index={index} zeitunterschied={timedifference[index+1].timedifference} />\r\n                    })\r\n                }\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function Rendercomponent(props) {\r\n    var currentindex = props.index;\r\n    var currenttimestamp = props.data;\r\n    var zeitunterschied = props.zeitunterschied;\r\n    var writtentime = currenttimestamp.toLocaleTimeString();\r\n        return (\r\n            <div>\r\n                <li>\r\n                    <h4>Runde {currentindex + 1}</h4>\r\n                    <h5>Uhrzeit an der Messtelle: {writtentime}</h5>\r\n                    <h5>Zeit von für diese Runde: {zeitunterschied}</h5>\r\n                </li>\r\n            </div>\r\n        )\r\n}\r\n\r\n","import React from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport TrendingDownIcon from '@material-ui/icons/TrendingDown';\r\nimport { palette } from '@material-ui/system';\r\n\r\nexport default function BetterorWorse(props) {\r\n    var timefromlapbeforelap = props.timefromlapbefore;\r\n    var lastlaptime = props.lastlaptime;\r\n    var currenttime = new Date();\r\n    var currenttime = currenttime.getTime();\r\n    var altezeit = lastlaptime - timefromlapbeforelap;\r\n    var neuezeit = currenttime - lastlaptime;\r\n    \r\n    return (\r\n        <div>\r\n        {altezeit > neuezeit ? <Faster/> : <Slower/> }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function Faster() {\r\n    return (\r\n        <div>\r\n            <h3 color=\"primary.main\">Bisher Schneller</h3>\r\n            <TrendingDownIcon color=\"primary\" fontSize=\"large\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Slower() {\r\n    return (\r\n        <div>\r\n            <h4 color=\"primary\">Bisher Langsamer</h4>\r\n            <TrendingUpIcon color=\"secondary\" fontSize=\"large\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport { Card } from '@material-ui/core';\r\nimport { CardContent } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Laplist from './laplist';\r\nimport BetterorWorse from './betterorWorse'\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport { jsPDF } from \"jspdf\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nexport default function CounterApp(userinformation) {\r\n    const [modalopen, setmodalopen] = useState(false)\r\n    const startzeit = userinformation.userinformation.startzeit.toLocaleString();\r\n    const startzeitobject = userinformation.userinformation.startzeit;\r\n    const [aktuellerunde, setAktuellerunde] = useState(0);\r\n    const [rennenamlaufen, setRennenamlaufen] = useState(true);\r\n    const [aktuelleZeit, setaktuelleZeit] = useState(0);\r\n    const [zufahren, setzufahren] = useState(userinformation.userinformation.rundenzahl - aktuellerunde);\r\n    const [timedifference, setTimedifference] = useState({\r\n        0:{\r\n            datum: startzeitobject.getTime(), \r\n            timedifference: 0\r\n        }\r\n    });\r\n    const [rundentimestamps, setRundentimestamps] = useState([]);\r\n    const startStamp = userinformation.userinformation.startzeit.getTime();\r\n\r\n    function callculatetime() {\r\n        var newDate = new Date();\r\n        var newStamp = newDate.getTime();\r\n\r\n        var diff = Math.round((newStamp-startStamp)/1000);\r\n\r\n\r\n        var d = Math.floor(diff/(24*60*60)); /* though I hope she won't be working for consecutive days :) */\r\n        diff = diff-(d*24*60*60);\r\n        var h = Math.floor(diff/(60*60));\r\n        diff = diff-(h*60*60);\r\n        var m = Math.floor(diff/(60));\r\n        diff = diff-(m*60);\r\n        var s = diff;\r\n        return(d+\" Tage, \"+h+\" Stunden, \"+m+\" Minuten, \"+s+\" Sekunden\");\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        let  intervall = null;\r\n\r\n        if(rennenamlaufen){\r\n            intervall = setInterval(() => {\r\n                setaktuelleZeit(callculatetime)\r\n            }, 10);\r\n        }else{\r\n            clearInterval(intervall)\r\n        }\r\n\r\n        return () => clearInterval(intervall)\r\n    }, [rennenamlaufen])\r\n\r\n    \r\n    function rundehinzufügen() {\r\n        var newDate = new Date();\r\n        setAktuellerunde(aktuellerunde + 1);\r\n        setzufahren(userinformation.userinformation.rundenzahl - aktuellerunde -1);\r\n        setRundentimestamps(rundentimestamps => [...rundentimestamps, newDate]);\r\n        setTimedifference({...timedifference,  [aktuellerunde+1]:{\r\n            datum: newDate.getTime(), \r\n            timedifference: calculatetimedifference([timedifference[aktuellerunde].datum], newDate),\r\n            timefromlapbefore: [timedifference[aktuellerunde].datum]\r\n        }\r\n        })\r\n    }\r\n\r\n\r\n    function calculatetimedifference(oldtime, newtime) {\r\n        var oldstamp = oldtime;\r\n        var newStamp = newtime.getTime();\r\n        var diff = Math.round((newStamp-oldstamp)/1000);\r\n        var d = Math.floor(diff/(24*60*60)); /* though I hope she won't be working for consecutive days :) */\r\n        diff = diff-(d*24*60*60);\r\n        var h = Math.floor(diff/(60*60));\r\n        diff = diff-(h*60*60);\r\n        var m = Math.floor(diff/(60));\r\n        diff = diff-(m*60);\r\n        var s = diff;\r\n        return(d+\" d, \"+h+\" h, \"+m+\" m, \"+s+\" s\");\r\n    }\r\n\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n        <Grid container\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                >\r\n\r\n            <p>Startnummer: {userinformation.userinformation.startnummer}</p>\r\n            <h1>{userinformation.userinformation.name}</h1>\r\n            <h4>Startzeit: {startzeit}</h4>\r\n            \r\n\r\n            <Card className=\"widthfull card\">\r\n                <CardContent>\r\n                <div className=\"spacer-sm\"></div>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                    Live Zeit:\r\n                    </Typography>\r\n                    <div className=\"spacer-sm\"></div>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                    {aktuelleZeit}\r\n                    </Typography>\r\n                    <div className=\"spacer-sm\"></div>\r\n                    <Typography variant=\"body2\" component=\"p\">\r\n                    Startzeit: {startzeit}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <div className=\"spacer\"></div>\r\n\r\n            <Card className=\"widthfull card\">\r\n                <CardContent>\r\n                <div className=\"spacer-sm\"></div>\r\n                    <div className=\"nexttoeachothercardjustifyleft\">\r\n                        <div>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                            zu Fahren:\r\n                            </Typography>\r\n                            <div className=\"spacer-sm\"></div>\r\n                            <Typography variant=\"h3\" component=\"h2\">\r\n                            {zufahren}\r\n                            </Typography>\r\n                        </div>\r\n                        <div className=\"iconforrundenzahl\">\r\n                            {aktuellerunde == 0 ? <h1></h1> : <BetterorWorse timefromlapbefore={timedifference[aktuellerunde-1].timefromlapbefore} lastlaptime={timedifference[aktuellerunde-1].datum}/>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"spacer\"></div>\r\n                    <div className=\"nexttoeachothercard\">\r\n                        <div>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                            Rundenanzahl:\r\n                            </Typography>\r\n                            <div className=\"spacer-sm\"></div>\r\n                            <Typography variant=\"h4\" component=\"h1\">\r\n                            {aktuellerunde}\r\n                            </Typography>\r\n                        </div>\r\n                        <div>\r\n                            <Typography color=\"textSecondary\" gutterBottom>\r\n                            Gesamtrundenzahl:\r\n                            </Typography>\r\n                            <Typography variant=\"h4\" component=\"h1\">\r\n                                {userinformation.userinformation.rundenzahl}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                </CardContent>\r\n                <Fab onClick={rundehinzufügen} className=\"floatbutton\" variant=\"extended\" color=\"secondary\" >\r\n                    <AddIcon />\r\n                    Runde Hinzufügen\r\n                </Fab>\r\n            </Card>\r\n\r\n            <div className=\"spacer\"></div>\r\n\r\n            <Card className=\"widthfull card\">\r\n                <CardContent>\r\n                <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>\r\n                            Rundenanzahl:\r\n                </Typography>\r\n                <Laplist laparray={rundentimestamps} zeitenarray={timedifference}/>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <div className=\"spacer\"></div>\r\n            <div className=\"spacer\"></div>\r\n            <div className=\"spacer\"></div>\r\n\r\n\r\n            <Fab onClick={handlestop} className=\"floatbuttonleft\" variant=\"extended\" color=\"primary\" >\r\n                <StopIcon />\r\n                Beenden\r\n            </Fab>\r\n            \r\n            \r\n            \r\n        \r\n        </Grid>\r\n\r\n        <Dialog\r\n        open={modalopen}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"RaceTimer\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <b>Danke</b> das Sie den <b>RaceTimers</b> benutzen. Sie können nun ihre Daten als <b>PDF Herurunterladen!</b>\r\n            <br/>\r\n            <br/>\r\n            Drücken Sie dazu auf <b>PDF Speichern</b>\r\n            <br/>\r\n            <b>Nach</b> dem Speichern können Sie die <b>Daten im Browser löschen.</b>\r\n            <br/>\r\n            <br/>\r\n            Es wird <b>keine Garantie</b> auf die Richtigkeit der Daten gegeben.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handlesavedata} color=\"primary\" variant=\"contained\"\r\n        startIcon={<SaveIcon />}>\r\n            Daten als PDF Herunterladen\r\n          </Button>\r\n          <Button onClick={handledelite} color=\"secondary\" variant=\"contained\"\r\n        startIcon={<DeleteForeverIcon />} >\r\n            Daten Löschen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n        \r\n        \r\n        </>\r\n    )\r\n    \r\n    \r\n\r\n    \r\n    function handledelite() {\r\n        setmodalopen(false);\r\n        userinformation.hadlestop(null);//Clean all the Data\r\n    }\r\n    function handlestop() {\r\n        // Start file download.\r\n        setmodalopen(true);\r\n        \r\n    }\r\n\r\n    function handlesavedata() {\r\n        exportPDF();\r\n    }\r\n        \r\n\r\n\r\n\r\n\r\n    function exportPDF(){\r\n        const doc = new jsPDF();\r\n          \r\n        var startnummer = userinformation.userinformation.startnummer;\r\n        var name = \"Name: \" + userinformation.userinformation.name;\r\n        var startzeit = userinformation.userinformation.startzeit.toLocaleString();\r\n        var text = \"Startzeit: \" + startzeit + \"         Startnummer: \" + startnummer;\r\n        doc.text(name, 10, 10);\r\n        doc.text(text, 10, 20);\r\n        var setoff = 30;\r\n        console.log(timedifference);\r\n        \r\n        const keys = Object.keys(timedifference)\r\n        console.log(keys);\r\n        var pageheight = 280;\r\n        keys.forEach(element =>{\r\n            if (element == 0) {\r\n                \r\n            }else{\r\n            if (setoff > pageheight){\r\n                setoff = 10;\r\n                doc.addPage();\r\n            }\r\n            var runde = \"Runde \" + element;\r\n            doc.text(runde, 10, setoff)\r\n            doc.text(JSON.stringify(timedifference[element].timedifference), 20, setoff+10);\r\n            setoff = setoff + 19;   \r\n        }\r\n        \r\n        })\r\n        doc.addPage();\r\n        var gesamtzeit = \"Gesamtzeit:  \" + aktuelleZeit;\r\n        doc.text(gesamtzeit, 10, 10)\r\n        doc.text(\"Runden zu fahren: \" + userinformation.userinformation.rundenzahl, 10, 30)\r\n        doc.text(\"Runden gefahren: \" +aktuellerunde.toString(), 10, 60)\r\n        \r\n        doc.save(\"AlleDaten.pdf\");\r\n     }\r\n      \r\n      \r\n}\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Appbar() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    return (\r\n\r\n            <div>\r\n      <AppBar position=\"static\" className=\"navbar\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleClickOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">\r\n            RaceTimer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Der RaceTimer\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Dieser Timer wurde zum üben geschrieben. Es wird keine Haftung über die zu Verfügunggestellten informationen gegeben.\r\n            Die Daten werden nur Lokal auf dem Gerät wie z.B. im Cache gespeichert.\r\n            <br/>\r\n            Bei Bugs gerne melden :-) <br/><br/>\r\n            Kontakt:<br/>\r\n            c.v.reyher@gmail.com\r\n            <br/>\r\n            <br/>\r\n            Copyright ©2021 Carlo von Reyher\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Schließen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"ausgleichnavbar\"></div>\r\n    </div>\r\n\r\n    )\r\n\r\n    function name(params) {\r\n        \r\n    }\r\n}\r\n","import \"./App.css\";\nimport {\n  Container,\n  BottomNavigationAction,\n  BottomNavigation,\n  Divider,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport StopIcon from \"@material-ui/icons/Stop\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport { ContactlessOutlined } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport Startscreen from \"./components/startscreen\";\nimport CounterApp from \"./components/counterApp\";\nimport Appbar from \"./components/appBar\";\n\n\nfunction App() {\n    \n  const [userinformation, setuserinformation] = useState()\n\n    return (\n      <div>\n        <Appbar/>\n        <Container>\n          {userinformation ? <CounterApp userinformation={userinformation} hadlestop={setuserinformation}/> : <Startscreen onsubmit={setuserinformation}/>}\n        </Container>\n      </div>\n    );\n\n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}